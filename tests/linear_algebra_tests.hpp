
#include "test_base.hpp"
#include <vector>

using namespace std;

void performLinearAlgebraTests(vector<TestParams>& testParamsList)
{
    string testName;
    bool passed;
    {
        testName = "Matrix * Matrix";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {-2.661112563685762  , 4.3012902211522785  , -0.13006716825326414, 0.9025784404874679  , -3.0520074919779527 },
            {-3.1463111588551715 , -0.8533679771154565 , -0.8431679296854231 , -1.3099225456470998 , 1.986525307021406   },
            {3.0635139803776177  , 0.330536774521323   , 2.0034905838112946  , 1.664157501652781   , 4.8240788200547655  },
            {4.125570486346904   , -1.6984405221118015 , -0.33743417057609726, 1.4474636375899905  , -3.5753159549095614 },
            {-1.0241603628980025 , -4.229521074142802  , -2.4590068496488513 , -0.8530402589451906 , 4.201450241465645   },
            {2.648123260606072   , -2.3673579035958148 , 1.2830328944592226  , 4.622910313787015   , 2.560647344842155   }
        });
        Matrix b({
            {4.7003497692844665    , -4.055619776849553    , -2.7876247176082747   , 1.2373188026268869    , 4.086765756721022     , -1.7795416988772148   , -2.7439077677092385   , -2.260841654670495    , 2.420294611260207     },
            {-0.8718444957095048   , -1.0535221374798187   , 2.649804691576602     , -1.167260764320436    , -3.105512047852139    , 1.7954026781338595    , -2.3878187012744903   , 4.481576485537026     , -3.9003933243349698   },
            {4.280589015948893     , -3.662975766920437    , -2.9543811662939357   , -1.8782736811779621   , -4.351073963684584    , 1.9880167662729988    , 2.5232397135259106    , 4.217678809733911     , 4.000332081205299     },
            {-0.799136953646105    , -0.0035503724348009413, 0.6743396638000556    , 4.384052538786914     , 4.483678435310086     , -0.07348125591699262  , -4.668819150689076    , -4.683627746260985    , 0.554315001104948     },
            {0.39220783483211896   , 2.291073108924108     , -2.358686511076189    , 3.3023085071969067    , 2.8905764806901324    , -4.200366672774695    , 1.2631762922369196    , 0.6540895752027795    , -4.5574412584225374   }
        });
        vector<vector<double> > expected({
            {-18.733285155959486, -0.2581876233398781, 27.007403504094214 , -14.190789184459877, -28.442310019243177, 24.95276100073576  , -11.366243455335963, 18.520705993962647 , -9.32805429413905  },
            {-15.828075832224119, 21.303712933176893 , 3.4315925631766504 , -0.4958367081301301, -6.670474283019786 , -5.857259168147708 , 17.16848397667902  , 7.167221031106798  , -17.43906301340434 },
            {23.249682102806393 , -9.065004271401218 , -23.839426477289926, 22.867967654824596 , 24.181958260366454 , -21.260415677152487, -5.815963108261046 , -1.63362898209577  , -6.922977774781303 },
            {16.868994688613775 , -21.902836651426515, -5.59503710900154  , 2.2599229793992572 , 19.758206016031025 , 3.849442372876697  , -19.390244464520947, -27.480099410593564, 32.356476605525245 },
            {-9.322887271998063 , 27.245639883262296 , -11.57272941151405 , 18.423140537366603 , 27.968500871228223 , -28.244653339105874, 15.994730389846834 , -20.267311035064708, -15.439533720966184},
            {17.313177515524487 , -7.095218289180069 , -20.36793072037927 , 32.35313898879004  , 40.72093720322549  , -17.507470604220465, -16.724968142895687, -31.162160516830074, 11.667971748082515 }
        });
        passed = areEqual(a * b, expected, 6, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix * SparseMatrix";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {1.3791502487651819  , 0.7324319968786721  , 0.054245404462673896, 2.565385088643879   , -2.7146913065188327 , 3.0031876242738704  , 0.7644774908614753  , -2.3951575626702204 , -3.8854292495749454 },
            {0.5217847417591672  , -3.082710824603181  , 2.0639484925551885  , -3.7514442925828195 , 3.209588641173614   , 1.5742157339939151  , -0.5780362844003317 , 0.10384426593421114 , -1.0624433306644763 },
            {-4.004307217378393  , -1.9332069707510815 , -1.356635763966847  , -4.4222687089180805 , -3.048015588166426  , -0.8299485704463327 , 1.8925506441209556  , 0.4903478721134711  , 1.3248427786114458  },
            {-2.385644159926019  , -0.733148638142266  , -1.8253700271397433 , -2.546329975229696  , 1.9903326599074767  , -3.6742416125853703 , -2.9540415197152847 , -1.9060723768336185 , -1.171779728992457  },
            {-0.2147126477721386 , -2.1679124998537924 , 4.030035727887482   , -0.8381284223494117 , -4.530512096500469  , -2.967175590316593  , -4.847872480328029  , 2.1118564212397564  , -0.9644591637354356 },
            {-4.547549973503077  , 1.2454184128878119  , -1.9434048675027404 , -3.9518777317415887 , -4.683443997391437  , 3.6165935842754084  , -1.0775432468342707 , -1.2982043343408458 , 1.5477572522917358  },
            {-2.581516616998875  , -3.4062970625041    , 4.746594039755312   , -0.09988234810659158, -1.3818877045711107 , 1.2694597657529556  , 1.974754071594365   , 4.223636233930311   , -1.041105861515701  },
            {2.085803827095681   , -3.0089901604301206 , -1.0733456271452866 , -3.802786914463506  , -2.1023851797106596 , -3.768816805592504  , 4.940411797109128   , 0.13437538067826438 , 1.8744814332075554  },
            {-0.954821827633415  , 3.14572407619538    , 1.0637720596185325  , -2.6231479855332696 , 3.9429279218602424  , 2.205578569742044   , 0.5033723414117288  , -2.9589288588915084 , 3.6039944187169404  }
        });
        SparseMatrix b(1.243921622540885, 9, 6);
        b[7][4] = 4.502300704162659;
        b[7][2] = 4.469188375127672;
        b[7][5] = 3.5752496942321947;
        b[7][0] = 0.17622043701007506;
        b[8][1] = -3.5630955609412274;
        b[8][4] = 0.5678547237972618;
        b[8][5] = -1.1838161171104922;
        b[1][3] = -4.129892724481287;
        b[2][1] = -3.879751501033687;
        b[5][4] = -3.488105276812048;
        b[5][0] = -0.34786162208875737;
        b[3][0] = -2.997499446894234;
        b[3][1] = -2.9313238573144993;
        b[3][2] = -2.2994053392056255;
        b[4][0] = -4.5696238709825865;
        b[4][5] = 3.399289196785995;
        b[6][1] = -4.162942292494741;
        b[6][4] = -2.3540883303186733;
        b[6][2] = 0.7351907275530865;
        b[0][2] = -3.907332049086695;
        b[0][3] = 0.39588568870059504;
        vector<vector<double> > expected({
            {2.0605088506118343 , 2.9373681694262173 , -24.925769329660174, -5.723005565079428 , -22.75676646198649 , -2.619735477111256 },
            {-6.609799670486023 , 12.075270202226422 , 9.988258437027872  , 14.877943367984242 , -5.558284220985428 , 8.493792027955159  },
            {22.487983775377945 , -5.97234055940712  , 22.1293994983107   , -1.0015586464094655, -16.966070604920652, -23.428853430182716},
            {-11.802559507112031, 22.67357823666593  , -2.2486814063741147, -12.952522977132777, 3.681336440975706  , -16.224447311283495},
            {19.438509114246518 , 0.7758113112791833 , 0.43041175778929824, -1.090910065510266 , 26.093762443969418 , -15.422988200225474},
            {25.820357742039544 , 11.045569199658582 , 19.99160696190217  , -16.634057261914577, -32.31113180548145 , -30.67652794357585 },
            {6.534204262811954  , -24.96839542350905 , 30.876878211523433 , 25.10120720842331  , 5.9609429295397325 , 14.002918086766078 },
            {28.334331360385878 , -20.218625471488657, -5.222798644623591 , 8.528050139535528  , -6.643804992554076 , -14.641756823789839},
            {-2.285670722145113 , -4.681866233763456 , 14.276180650203104 , -6.232417795507532 , -14.463452885943628, 2.7130679723559448 }
        });
        passed = areEqual(a * b, expected, 9, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix * Vector";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {-3.6124532505314075 , 2.231774902445367   , -3.227460084559061  , -1.0742701491189397 , -4.134237780716491  , 2.1756250482167268  , -2.424947999772381  },
            {-3.9334145693643996 , 3.061565737338416   , 0.2767317078736333  , -3.528981345679373  , 2.693968069553617   , -2.7170162641081874 , 2.7067000927116256  },
            {1.3018915444742385  , -3.3782780185246706 , -1.8512757956226888 , 3.4469688598681802  , -0.29627601768566336, -1.9458880330659731 , -4.127968170088716  },
            {3.486117925481551   , 3.452326685591032   , -1.0204133102931765 , -2.8449342057767213 , 3.8806349421301256  , 0.47917126179272884 , -2.3014214172064618 },
            {-0.24274258921458713, 3.593400514137473   , 4.387657640766404   , 1.2310573272262388  , -4.519234812845772  , -2.1795347086700687 , -1.0890774364235698 },
            {-3.1116676097908327 , -1.6684351903126595 , 0.5203793369797172  , 4.301709849573637   , -0.19809398102096765, -2.669263160514579  , -3.7150119974969997 },
            {3.938635990872763   , -4.216860391964191  , 4.175646738594693   , 3.1211870730759568  , 2.0279305693746172  , -4.119055339572486  , -3.321906922172495  }
        });
        Vector b({-3.6676251018969683, 1.42010668703284   , -4.9689911230045265, -4.694346797531011 , 4.960421152947728  , 1.7583213834391689 , 4.007839110017182  });
        vector<double> expected({11.097785900816003 , 53.39907175781458  , -37.99004218759808 , 21.410825024316274 , -52.202418565092074, -34.30162634315489 , -66.33141985876533 });
        passed = areEqual(a * b, expected, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix * SparseVector";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {-4.303626186092223 , 1.0213612971368944 , -2.18993998666571  , -1.5105609108116291, 4.158871060245774  , 3.46484094220844   , -0.7892961337857427, 2.404469179751672  },
            {-3.3954370914940157, 1.010280525090126  , -3.496230766043824 , -0.7664816927655327, 0.3881449918545199 , -1.7768525858276973, 1.2182290256825103 , 2.273255684911377  },
            {0.9459158008042357 , 4.923000487444369  , -4.33129390716031  , 4.9832083664284195 , 1.288328387299421  , -0.5312142368738417, -3.9538321294249137, -3.0030527647359517},
            {-4.355016497786056 , 0.9305389699417868 , 0.7262911390882145 , 0.9486334504316591 , -4.187209751339403 , -3.7589006235184153, -4.075548467318707 , 3.081863745983874  },
            {-2.6982671525001156, -2.336544995965373 , -1.810274703246293 , 3.9218625536777356 , -0.5471959250699134, -3.2647051249365875, 2.748722050952706  , 3.671804520970971  },
            {3.005725322156099  , -2.816987696046512 , -1.4782820332312872, 3.504538464843513  , -3.7473596712212167, -0.9097059988286631, 4.3734169176596325 , -1.8829414634477502},
            {-0.2665478642058652, 4.967593217090219  , -4.108993001171314 , 4.508647957755002  , -3.4367521366064957, -3.010920912511732 , -0.6650651897437339, 3.1842250342307405 },
            {-3.2294286801660377, 4.8014191244497635 , 1.021093103104942  , 4.507289383375072  , -1.7149623335825535, 0.5378617652612689 , -0.8065540714025667, -2.2947791300900477},
            {-2.5963620250266874, -4.039410553940783 , -2.3898902112402345, -1.071623370191337 , 4.671684590295346  , -2.635394868677141 , 3.9279344718982205 , -4.624266940519317 }
        });
        SparseVector b(-4.759056395981651, 8);
        b[4] = -0.3465459414700316;
        b[5] = -0.9297025243666575;
        b[2] = 1.4509322728871865;
        vector<double> expected({7.282662802320601  , -5.1727082173750105, -24.774673566323123, 22.51120241787552  , -24.66081102694677 , -29.429321203790707, -57.78989090209076 , -12.596417205677369, 37.35742856809972  });
        passed = areEqual(a * b, expected, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix * Matrix";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(-0.8173642102758585, 8, 9);
        a[4][3] = 1.1306489836330424;
        a[4][4] = -1.7047192357814902;
        a[4][0] = -2.9286497467811556;
        a[2][5] = -0.39140289109507087;
        a[2][7] = -3.818105251480779;
        a[2][8] = 3.754763618217;
        a[2][3] = 0.05571077796057278;
        a[2][1] = 0.5608085187686314;
        a[2][0] = -3.7519364570978375;
        a[6][4] = -2.2483581100487573;
        a[6][8] = -0.974918962786111;
        a[6][0] = -2.80422793643059;
        a[6][2] = -0.5839507571339677;
        a[6][3] = -2.8947196406065636;
        a[0][3] = 0.767087098393783;
        a[0][6] = 0.9953854345851045;
        a[1][3] = 4.395060769974727;
        a[1][7] = -3.02520577075338;
        a[1][6] = -1.8492239899286922;
        a[1][5] = 2.0838336664959387;
        a[3][6] = 4.939230456603349;
        a[3][7] = -2.1590678984047704;
        a[3][5] = 3.5399184913947117;
        a[7][7] = -2.647867632247517;
        a[5][8] = 0.6237804779710139;
        a[5][1] = -1.6787324081166108;
        a[5][0] = -4.9087226005390585;
        a[5][5] = -3.0462925956380893;
        Matrix b({
            {0.9719498869698437  , 0.1564062941390878  , -1.236985032790189  , -4.944321808311085  , 4.922839485911624   , 0.7884310038188369  , -2.811290894094304  , 0.7686096864061556  },
            {-4.356853717162914  , -1.491307053556663  , 0.688251948666978   , -4.706546491626592  , -2.590947682095744  , 2.5974370691224955  , 4.500969190080987   , -3.517670161783143  },
            {3.5938227718043922  , -3.4260781610754454 , 0.503779941306707   , -3.2524074597086794 , 1.5021764901016654  , 4.933270461699589   , -4.982376146634236  , 4.000554442095444   },
            {-0.2189855538954335 , -0.7297269063405132 , 3.1013890307233876  , 1.407199981606552   , -3.8080024355550455 , -3.8230056684050173 , -0.6879358982921238 , -1.548606966971061  },
            {-1.045377567926252  , -2.7734135156559967 , -0.28498045105509107, 3.415481177724738   , 0.035364169214256336, -2.3896933238385487 , 3.8591436418022447  , 0.2054762208914127  },
            {3.663808303395516   , -3.525110337908802  , -2.8610822258018564 , -1.9838988011385017 , -3.3920950747328407 , 0.980769227924374   , -3.960957707418676  , -4.720883911439301  },
            {4.312558289015588   , -0.8244081109703156 , 2.3856602771228594  , -4.4746806776622075 , 0.4358837856502049  , 4.555224386752148   , -3.7019663206221622 , -3.243464511986839  },
            {2.7609214733599785  , -0.17281133638980517, -2.8848118065823227 , 1.2564745984773085  , -0.9000808859479656 , 0.9126371747589648  , 1.8236610982768644  , -1.5310410496279792 },
            {3.9387202603218956  , -3.278729629783106  , 1.955371447165045   , -0.07315821735349992, 3.4071172206400355  , -2.589084554369252  , 4.584945358657066   , -4.179807587173146  }
        });
        vector<vector<double> > expected({
            {-3.6623450972051734, 10.480439885993842 , 8.121600415083043  , 5.034764122993968  , -4.926517438900672 , -2.676268198522365 , -6.676203110905204 , 2.919235791638682  },
            {-12.190607177282251, 0.33262638733376754, 10.655728177848374 , 14.338987606483778 , -27.83567218189945 , -28.673419013543032, -14.15924500851764 , -3.7886021134733974},
            {-8.896743855184718 , -5.994038006661455 , 22.547363924987053 , 15.218318955768638 , -4.191160603020057 , -21.106588303993565, 28.780372351017952 , -13.730301293573861},
            {25.95259840972273  , -6.742721876310661 , 4.020293464723127  , -25.172547376024827, -10.746540245517892, 24.395197285570013 , -39.892008943879745, -25.934815623567967},
            {-12.683991104991945, 13.840368580885151 , 7.789049881857882  , 21.065974944654844 , -17.526010539422302, -11.867745330524691, 2.2954350488920405 , 6.430725594098223  },
            {-13.846802291282918, 16.90784711697104  , 12.546226998975424 , 39.51619883922003  , -5.121525990404094 , -16.256796567927882, 24.185803540461677 , 15.636673439890503 },
            {-10.894971391136346, 18.021870830785414 , -4.884654728233154 , 12.181877246414292 , -1.7902930592378488, 6.477904208550231  , 0.7315306693409874 , 14.240698214193094 },
            {-16.18683786139149 , 13.44743389071549  , 4.163653570239517  , 8.61661902774277   , 1.9645299676726737 , -6.546968724928362 , -2.2136819244927466, 14.05509314981728  }
        });
        passed = areEqual(a * b, expected, 8, 8, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix * SparseMatrix";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(-0.7841838014577407, 6, 7);
        a[2][6] = -0.9803185603868485;
        a[2][2] = -3.2278770046453795;
        a[2][3] = -1.4775741491791128;
        a[0][3] = 0.6748623626161079;
        a[0][1] = -1.8942287631351795;
        a[0][5] = 0.6888669471580506;
        a[0][0] = -2.354966227658364;
        a[3][6] = -2.8237390975071444;
        a[3][0] = 3.9900651012641024;
        a[3][1] = -1.096878410799078;
        a[4][1] = 3.803675146330935;
        a[4][5] = 4.892817177354612;
        a[4][3] = -3.972159528711713;
        a[1][2] = -0.47155327469260655;
        a[1][1] = -4.310662911150466;
        a[5][0] = -3.1941836172536995;
        SparseMatrix b(3.381461032124605, 7, 8);
        b[6][1] = 0.10830475164796383;
        b[6][6] = 2.0735854128766116;
        b[6][2] = 3.3163363714782665;
        b[6][7] = -3.82438073685437;
        b[3][2] = 0.5466544883645819;
        b[3][1] = -2.2766286085074516;
        b[3][7] = 0.10732489685371771;
        b[1][0] = 1.0458888533777824;
        b[1][3] = -0.971507132419795;
        b[1][7] = -1.2714685373375945;
        b[1][4] = 1.7876741123855275;
        b[1][1] = -1.8516289074584646;
        b[1][6] = 4.053641474391519;
        b[4][3] = -1.2956946267397749;
        b[4][7] = 4.686681308165522;
        b[4][0] = -0.03399586845481384;
        b[4][6] = 2.7444338096118575;
        b[2][2] = -1.1745946536871097;
        b[2][7] = -0.21049663804461805;
        b[5][2] = -2.6641672312086397;
        b[5][3] = -4.7691891635247385;
        b[0][5] = -0.46987024087381535;
        vector<vector<double> > expected({
            {-10.609696684486028 , -9.051156784207633  , -20.166033615647017 , -11.413596970618526 , -14.69315363417962  , -8.642395580422226  , -17.460252883699013 , -3.6641020705521914 },
            {-16.683102169637092 , 0.13251257855698234 , -20.265926704982636 , -0.6057765332126518 , -22.55903434969136  , -26.409160914554363 , -30.801694511050147 , -0.48360587334352145},
            {-25.32309274713059  , -14.160269391124048 , -6.133205678440064  , -16.360071910599267 , -28.58313470741604  , -26.81280499451767  , -28.5783884341247   , -3.711540284050957  },
            {-5.131728861507035  , 9.047671444062152   , 0.34865970620714204 , 4.462120824690042   , -8.623723073573073  , -25.738976043046875 , -6.916567802803746  , 19.439948531688866  },
            {-0.8370124903682526 , 10.505016055806118  , -9.327595836197874  , -47.40076901716972  , -0.6938483127772791 , 8.38855098071457    , 9.450316728399885   , 8.119484683169524   },
            {-22.20126538539026  , -15.603686490748856 , -16.123381334179015 , -13.238244548858944 , -25.46130734567571  , -14.409269974281939 , -25.713080941674836 , -13.050925898603445 }
        });
        passed = areEqual(a * b, expected, 6, 8, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix * Vector";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(3.2709268022469313, 8, 8);
        a[2][2] = -2.6866777088615534;
        a[2][6] = 0.7595263746021494;
        a[2][3] = 0.02467881371104763;
        a[2][7] = -4.918665338464201;
        a[1][0] = 3.0977825696854495;
        a[1][1] = 0.22870429324541774;
        a[6][3] = 1.1176254476940013;
        a[6][2] = 0.32051482235689743;
        a[6][0] = 0.8482377912137267;
        a[6][6] = 1.7161374140086325;
        a[6][7] = 2.8268323147071506;
        a[3][5] = -0.6812667092268327;
        a[3][1] = -0.40629390546388944;
        a[3][7] = 2.4118185720390404;
        a[3][2] = 4.409492611038173;
        a[0][1] = 4.752571230515134;
        a[0][2] = -3.307415026380105;
        a[0][7] = 3.9156785648093972;
        a[5][4] = -3.9238872866732635;
        a[5][6] = -2.9299430215376088;
        a[5][0] = 4.1489382713106835;
        a[4][2] = -2.9374944586954053;
        a[4][6] = -1.1915518980646311;
        a[7][7] = -0.17498812521804474;
        a[7][4] = 1.846836755538435;
        Vector b({1.4395773530901037  , 0.7762522507641183  , 3.7458057349150877  , -1.5467026589113386 , -1.2111720150022762 , -0.08216363639629698, -2.53897312522441   , 3.5898339993800974  });
        vector<double> expected({-7.528704542309967 , 11.037017798959337 , -26.670142479115093, 12.298870526839206 , 1.7223779128815453 , 39.369769124776454 , 4.79234594875073   , 3.0023598307421415 });
        passed = areEqual(a * b, expected, 8, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix * SparseVector";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(2.615970836235837, 9, 7);
        a[6][3] = 0.3440650766990938;
        a[6][5] = -1.3006399229665524;
        a[6][0] = 3.08700667556829;
        a[6][4] = 0.5274286182767458;
        a[4][1] = -1.0898014605459752;
        a[4][0] = -2.1781067940756325;
        a[8][3] = -1.4155976937340298;
        a[8][5] = 4.51014144637619;
        a[8][6] = 1.569116191864297;
        a[7][1] = -3.2878797561636808;
        a[7][0] = -2.595347560364445;
        a[7][5] = -4.642857572212589;
        a[7][6] = -2.1908348472932326;
        a[7][2] = 2.7219638562556083;
        a[3][1] = 1.6536720012567265;
        a[3][2] = 1.5826904872074294;
        a[3][4] = -2.6503401454744813;
        a[3][6] = -3.107983306069688;
        a[5][0] = 3.6684135401168003;
        a[5][2] = -1.556673431778739;
        a[5][3] = -3.2123422271100144;
        a[2][3] = -3.8121494430673044;
        a[1][3] = -0.13107755737028803;
        a[1][0] = 2.869382688532781;
        a[1][4] = -3.6983904063443482;
        SparseVector b(-0.3743913530426193, 7);
        b[0] = 0.9271682804722907;
        b[4] = 2.3702977028256758;
        vector<double> expected({3.729090541295372 , -9.974398810502715, 6.1357231901843745, -5.863507754122294, 0.6715829326088096, 8.449153980357826 , 1.5322802817845325, 5.585258238810131 , 4.921247167236034 });
        passed = areEqual(a * b, expected, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector * Matrix";
        cout << "TEST: " << testName << endl;
        Vector a({2.196069020300243  , 0.950265417170149  , 4.087593463542035  , -3.3582079189814595, 4.055116518287562  , 3.720782420862383  });
        Matrix b({
            {-2.707541632470538  , -4.641389213067888  , 2.4905907334587187  , -0.8042520937658875 , 2.488031453251642   , -2.0335694141822156 , 0.09892845647852688 },
            {-0.9659115145405153 , -2.8710612011062278 , -2.3265045512823446 , -4.329688851335467  , -4.639893194997303  , 2.2675113423989615  , -1.5743728250316025 },
            {1.1540893861623491  , -1.5546158936108956 , -0.24022154571287047, -1.6685177477693038 , -2.0845775962223847 , 4.150211420782837   , -4.786532393877014  },
            {1.652361196852862   , 4.386373906753553   , -0.7176780380544665 , -0.6297804653585679 , 4.236962950411753   , -1.013494098194292  , 0.9334487198930272  },
            {0.8039253519201921  , -2.880418657092049  , -1.268639812941359  , 3.414081857146561   , -1.7407760440481712 , -4.99055214533164   , 4.906516744682612   },
            {-1.9157227899888065 , -4.975395574297553  , 3.517214903026341   , -4.8997395857865484 , -0.3921631997799171 , 2.2078576845347495  , -0.9810932517235909 }
        });
        vector<double> expected({-11.56332153981857 , -64.19887225192072 , 12.629205504998529 , -14.972200367658049, -30.212953166328383, 6.034467423386642  , -7.732869165836019 });
        passed = areEqual(a * b, expected, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector * SparseMatrix";
        cout << "TEST: " << testName << endl;
        Vector a({1.0370486874733533  , 1.7220893708251115  , -3.470515251623975  , -0.44198123208458195, 3.4800339401872193  , -4.133863980299121  });
        SparseMatrix b(-1.1353602502897617, 6, 7);
        b[3][0] = 0.8820669320321528;
        b[3][1] = -3.1731901375246494;
        b[3][6] = 4.519099632940684;
        b[3][3] = -0.710574048555749;
        b[4][0] = -3.5257951024871015;
        b[4][1] = -1.8681772824230758;
        b[4][4] = -0.1637863809549156;
        b[0][3] = 1.6707682027437167;
        b[0][5] = 0.9587242706722634;
        b[0][4] = -0.6719595831580332;
        b[5][0] = -4.0339720326380775;
        b[2][4] = 4.132357676593614;
        b[2][1] = 3.2528217433856756;
        b[2][0] = -0.3780582186287358;
        b[2][6] = -3.8776943709920033;
        b[1][5] = -1.050785568039645;
        vector<double> expected({2.1955891683540156 , -14.826988166848825, 2.05180994853582   , 4.774154248820892  , -12.368206363658436, 4.369122713801592  , 9.069957193518741  });
        passed = areEqual(a * b, expected, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector * Matrix";
        cout << "TEST: " << testName << endl;
        SparseVector a(-4.983691184936822, 6);
        a[2] = 3.067160625506526;
        a[0] = -3.2761001772850165;
        Matrix b({
            {3.9190681609092373  , -0.8704238144630221 , -4.850610567374502  , 0.28859453361120746 , -3.4569800356824123 },
            {-3.1870235905773736 , -1.6438675183255915 , 1.2838759049682285  , 3.4254701130509684  , 0.6687041518397052  },
            {-3.8279134510024617 , 0.870523136535569   , -0.13056283605746177, -2.729455510101493  , 4.749997767295344   },
            {-2.6351594343220484 , 4.33094546879482    , -3.4241909108378445 , 3.839329359459395   , 2.7820720265697654  },
            {-2.9060680456805765 , -4.113141460793245  , 0.7105315192834274  , -2.4334388490487155 , 3.5192463784055494  },
            {1.8798874297484547  , -0.9086887747243555 , -2.3846321943220508 , 3.647252627969241   , -1.656953952520336  }
        });
        vector<double> expected({9.550044196545633  , 17.15731428285642  , 34.500498754433444 , -51.57193319402694 , -0.5842741373258953});
        passed = areEqual(a * b, expected, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector * SparseMatrix";
        cout << "TEST: " << testName << endl;
        SparseVector a(4.654594127882945, 6);
        a[0] = -4.2248398259395;
        a[2] = -3.4585579835611657;
        SparseMatrix b(1.633079505467558, 6, 9);
        b[4][6] = -4.69168127241829;
        b[4][3] = 3.4192689927311157;
        b[4][5] = 3.2411283708317207;
        b[1][7] = -1.1078554476211822;
        b[1][3] = -1.5486141516926688;
        b[1][2] = -3.265428780383879;
        b[1][1] = -2.582679860573205;
        b[1][0] = -1.3840499705567098;
        b[0][5] = 0.8383768493334305;
        b[0][2] = -1.8269468865482121;
        b[5][6] = -4.63376035847206;
        b[5][5] = -0.24845817696191652;
        b[5][1] = 2.3787586625145707;
        b[2][5] = 0.7764594673921934;
        b[2][6] = 3.955064897150965;
        b[2][1] = 1.7188341573676391;
        b[2][8] = -0.5730186420326966;
        b[2][2] = 3.4348502870216375;
        b[2][0] = 4.5320812419143905;
        b[3][0] = -4.59093676079767;
        b[3][5] = 3.6072203492730246;
        vector<double> expected({-35.18245869590579 , 1.4092872109895822 , 3.4436502870000822 , 11.36218409637405  , 17.85768961101125  , 32.09369605122759  , -48.781821911195735, 5.099749873455284  , 25.487607971567755 });
        passed = areEqual(a * b, expected, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector dot Vector";
        cout << "TEST: " << testName << endl;
        Vector a({-1.503360811346004 , -1.4631350592314485, -1.7220737875492098, -2.217657612543128 , 1.0802533675454464 , -1.3819218659165156});
        Vector b({-4.334533455376503 , -0.5926929148523685, -3.6337919907440597, 4.441882140421258  , -3.614369945173336 , 1.2381998343888618 });
        double expected = -1.8248890210428856;
        passed = (a.dot(b) == expected);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector dot SparseVector";
        cout << "TEST: " << testName << endl;
        Vector a({-2.178167733032681 , -2.5850174296411876, 2.7959591133690527 , -4.275051564305221 , 0.33793309089234924, 0.4701297695171549 , 3.499692284182361  });
        SparseVector b(-3.291213303937468, 7);
        b[3] = 3.116821949985143;
        b[5] = -2.0293845243707285;
        double expected = -20.43453177629847;
        passed = (a.dot(b) == expected);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector dot Vector";
        cout << "TEST: " << testName << endl;
        SparseVector a(3.9689998062930396, 5);
        a[3] = -1.9514795252183967;
        a[0] = -1.403515213655199;
        Vector b({3.601718779793382  , 2.5255414460210988 , -1.2867744541198678, 2.0737963106158244 , -4.520287827282429 });
        double expected = -22.126393702362428;
        passed = (a.dot(b) == expected);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector dot SparseVector";
        cout << "TEST: " << testName << endl;
        SparseVector a(0.47181527143377444, 8);
        a[4] = 4.1808685943945445;
        a[3] = -4.477517885803247;
        a[2] = -3.5507786766871776;
        SparseVector b(0.37065706213058025, 8);
        b[2] = 3.333084144768005;
        b[5] = -2.393713038750589;
        b[7] = -4.64749924825862;
        double expected = -14.74250576296714;
        passed = (a.dot(b) == expected);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix + Matrix";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {0.9016166638089071   , -4.815631371763494   , 4.578557932173069    , 1.4685537996908131   , -3.7561294281837454  , -3.6041042806277126  , 1.8101728271013187   , -3.3711583362624706  , -3.5968999941778304  },
            {0.44087699285079296  , 0.6502255243451476   , -4.050199578329327   , -3.4573357291715867  , 3.999517723932467    , -3.182609024671539   , 1.6279439894081982   , -0.5288276974201338  , 0.5998944673227777   },
            {-3.180267291785319   , -0.1970938644097906  , -4.856685686637187   , -1.3079263898287419  , 2.784015516737627    , -4.537677840657332   , 2.2705502812410385   , 1.899691482285343    , -0.045591454940975495},
            {0.04215066100055953  , 4.0265142958518005   , -3.852728639754032   , -2.9886720411157564  , -2.6084611890401366  , -2.768477108325873   , 1.8277591957464434   , -1.8717178088980244  , 4.2299895792850375   },
            {-4.987473166076613   , 1.1582322299721728   , -1.2504661816282714  , -0.09690439909151571 , 4.92113077983179     , 4.521472968782547    , -2.3586757294677687  , -4.019816887076535   , -3.8633192995146546  },
            {1.7402881731902395   , 1.1296146327780665   , -3.3065504229819753  , 1.1868614257443397   , 2.1013360598245514   , 2.479319752138017    , -2.12127985666425    , 2.2758170410228518   , 4.719596818175294    },
            {0.6779461211747648   , -1.931996587327287   , 2.0288409001071823   , 0.630192428036862    , 1.619467024516263    , 0.704548216022606    , -2.6290098898235437  , -2.980415786944696   , -4.453791041094081   },
            {4.208227870358728    , 2.8789239411584813   , -2.581458543805547   , -4.971389973343941   , -2.9433729747188697  , 3.877456974816303    , -4.040114240301712   , 3.7325180161831355   , -1.59343676940808    }
        });
        Matrix b({
            {2.850949725488986   , 0.411502768996332   , 0.6683884310927706  , -0.9279683954527274 , -4.853346258276337  , 2.8509727919577923  , 4.498322533396454   , 3.698236065806004   , -4.7147294793799155 },
            {0.09674622402919919 , 0.20932929109239495 , -1.7451484168524134 , 1.726618913964458   , -1.3175957172061956 , 3.856935854600179   , 3.573936809000898   , -3.8550172574872335 , -1.8651210404417693 },
            {4.4942725285597245  , 1.543225808857195   , -4.808760084369961  , 3.3140738975390054  , 1.5317482726034948  , -2.9226266298782866 , 2.1491930039525364  , 4.854078801009205   , -4.739059372148715  },
            {3.8602535465638006  , -3.009019387876213  , -3.009172518887323  , -3.429897952399037  , -0.11763364040729751, -4.279833838434984  , 3.7148369483835673  , 0.15046311847316307 , -1.6021515022373691 },
            {0.37075173785135185 , -1.1115607007662565 , 3.7422035983388025  , -1.0663089009706264 , 0.5482950460870848  , -2.727529849394492  , -0.234312174773307  , -2.083650358619286  , 4.857489868398229   },
            {0.15059390544278983 , 3.405546848288976   , 4.843951647639731   , 2.8249162661517495  , -2.5135165356963443 , 4.303581176367899   , -1.7479983394568688 , 4.775770907721956   , 0.881531702176308   },
            {-2.254483134268064  , -1.755769234381245  , -3.8410589413607887 , 3.7902630291344366  , -1.0967642305923486 , 2.7547762529169804  , -4.809401893123823  , 4.708972913967811   , -3.8389847757738647 },
            {0.9131356173803624  , 4.361842202805937   , -0.5732160294376785 , 2.734226924396248   , 1.917544351623591   , 1.6879738172519971  , -2.784898383329267  , 1.2505285448862677  , 4.207995420708338   }
        });
        vector<vector<double> > expected({
            {3.7525663892978933  , -4.4041286027671624 , 5.24694636326584    , 0.5405854042380858  , -8.609475686460083  , -0.7531314886699203 , 6.308495360497773   , 0.3270777295435332  , -8.311629473557746  },
            {0.5376232168799921  , 0.8595548154375425  , -5.79534799518174   , -1.7307168152071286 , 2.6819220067262712  , 0.6743268299286402  , 5.201880798409096   , -4.383844954907367  , -1.2652265731189916 },
            {1.3140052367744053  , 1.3461319444474045  , -9.665445771007148  , 2.0061475077102635  , 4.315763789341122   , -7.460304470535618  , 4.419743285193575   , 6.753770283294548   , -4.78465082708969   },
            {3.90240420756436    , 1.0174949079755877  , -6.861901158641355  , -6.418569993514794  , -2.726094829447434  , -7.048310946760857  , 5.542596144130011   , -1.7212546904248613 , 2.6278380770476684  },
            {-4.6167214282252615 , 0.04667152920591633 , 2.491737416710531   , -1.163213300062142  , 5.469425825918875   , 1.7939431193880546  , -2.5929879042410757 , -6.103467245695821  , 0.9941705688835745  },
            {1.8908820786330294  , 4.535161481067043   , 1.5374012246577555  , 4.011777691896089   , -0.41218047587179285, 6.782900928505916   , -3.869278196121119  , 7.051587948744808   , 5.601128520351602   },
            {-1.576537013093299  , -3.687765821708532  , -1.8122180412536064 , 4.420455457171299   , 0.5227027939239144  , 3.4593244689395863  , -7.438411782947367  , 1.728557127023115   , -8.292775816867945  },
            {5.121363487739091   , 7.240766143964418   , -3.1546745732432253 , -2.237163048947693  , -1.0258286230952787 , 5.5654307920683     , -6.825012623630979  , 4.983046561069403   , 2.614558651300258   }
        });
        passed = areEqual(a + b, expected, 8, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix + SparseMatrix";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {0.3131800506293523 , 4.35903569110706   , -4.796160397847356 , -4.812884632766665 , -1.8291727656531611, -3.340598992814013 , 3.356893729978971  , -0.8397845594407496, 0.16785558254102195},
            {4.632488647646509  , 2.03282168364304   , -4.72094223341324  , -4.819802320420843 , 0.7231451886791431 , 1.6176902799216322 , 0.16678620703179448, 1.5538046854284815 , 4.849475671743878  },
            {-3.2337099669336644, 0.7579255987025268 , 1.7643404097553947 , 1.6682834414905487 , 3.374252190799197  , -2.4126924821766096, 4.259950486767567  , -2.95498547148115  , 3.9821705627919215 },
            {1.5832148485088933 , 0.19115172989396356, 4.858873666489687  , -2.5352618439824814, -0.4792825301263024, 1.3621112421980461 , 2.9222092685070287 , 1.341069832416201  , 0.7801049036499332 },
            {-1.2889566758531346, 3.747359583316662  , -4.2517532387550165, 1.819430451397423  , -2.61398091050705  , 2.2123914406028877 , 2.1310735253717974 , 1.5919429993434777 , -2.6972275610964056}
        });
        SparseMatrix b(2.13497316167457, 5, 9);
        b[4][1] = 0.4651162493585437;
        b[4][6] = -4.412069035824001;
        b[4][0] = -3.019945789253496;
        b[4][5] = -3.3333015273952213;
        b[4][2] = -2.1898940617649574;
        b[1][2] = 3.851306011166157;
        b[1][8] = 0.8049991277362061;
        b[1][3] = -3.5237531937249758;
        b[1][6] = 4.390760835571498;
        b[1][7] = 4.277819612205212;
        b[1][5] = 0.5933533386929781;
        b[2][4] = 3.9551983425072663;
        b[2][3] = 2.128579169680612;
        b[0][4] = 4.695741547073705;
        b[0][7] = 4.329357470407992;
        b[0][6] = 3.1236461329902205;
        b[3][7] = 4.284141761456384;
        b[3][8] = 3.641325862283164;
        vector<vector<double> > expected({
            {2.4481532123039225  , 6.49400885278163    , -2.661187236172786  , -2.677911471092095  , 2.8665687814205443  , -1.205625831139443  , 6.4805398629691915  , 3.489572910967242   , 2.302828744215592   },
            {6.767461809321079   , 4.16779484531761    , -0.8696362222470828 , -8.34355551414582   , 2.8581183503537133  , 2.2110436186146103  , 4.557547042603293   , 5.831624297633693   , 5.654474799480084   },
            {-1.0987368052590942 , 2.892898760377097   , 3.899313571429965   , 3.7968626111711608  , 7.3294505333064635  , -0.2777193205020394 , 6.394923648442137   , -0.8200123098065797 , 6.117143724466492   },
            {3.7181880101834635  , 2.3261248915685337  , 6.993846828164258   , -0.40028868230791126, 1.6556906315482678  , 3.4970844038726163  , 5.057182430181599   , 5.625211593872585   , 4.421430765933097   },
            {-4.30890246510663   , 4.212475832675206   , -6.441647300519974  , 3.9544036130719933  , -0.47900774883247976, -1.1209100867923336 , -2.280995510452204  , 3.726916161018048   , -0.5622543994218354 }
        });
        passed = areEqual(a + b, expected, 5, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix + Matrix";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(-0.4180667020274864, 7, 9);
        a[3][7] = 2.1582817494350293;
        a[3][5] = 0.7627881507683405;
        a[3][1] = -2.9608711433851576;
        a[1][4] = -4.485023863806319;
        a[1][8] = -0.7088220951541153;
        a[1][6] = -2.976938236465684;
        a[5][4] = -1.5151866088891985;
        a[5][6] = 3.96911432584824;
        a[5][3] = 4.576513617386773;
        a[4][3] = 3.2445230985588562;
        a[4][2] = -4.5099868199389626;
        a[4][6] = -3.9757588173842597;
        a[4][1] = 4.083803063493308;
        a[4][8] = -4.48892963126832;
        a[4][0] = -0.6377695402815391;
        a[4][5] = -2.279570287422694;
        a[2][0] = -0.542968711394952;
        a[2][4] = 0.5778826766481249;
        a[2][6] = 1.558618694514772;
        a[0][5] = -1.3805481717487575;
        a[0][6] = -0.5905512607899075;
        a[0][1] = 2.3801559956682317;
        a[0][2] = 4.0687631859839986;
        a[6][3] = -3.5053902709296825;
        a[6][5] = -0.8744243631963666;
        Matrix b({
            {-0.8815343942946887 , -0.6867329262301212 , -0.08643124529727597, -3.6492970996836425 , -3.9538826839715813 , -4.9956915517000136 , -2.6723793212000246 , 4.7039677723172755  , -2.1886003313730162 },
            {2.23336802586876    , -2.955975085450394  , 2.575501871029015   , -3.2610260667862576 , 2.1051164554275577  , -3.6292138874326474 , 3.752797773981003   , 2.8467248284417312  , 3.4581560168829437  },
            {-2.8178295020352118 , -4.840174834282289  , -1.036559745900827  , 3.1246001038711153  , -1.860213107520675  , -2.7942817829626634 , -2.8866260512500173 , 0.6589392126303126  , 4.4531324788554     },
            {1.9246835488139125  , -0.7443999968473509 , 0.32371705169136966 , -0.5327173130160743 , -4.875200935697799  , -2.752678605354678  , -1.9480279394722966 , -4.941299141309362  , -3.966994194631408  },
            {1.86038326214911    , 3.6808531313876642  , -3.220864648188945  , -1.1527667338252936 , -2.1746187943926856 , 0.1719005641855862  , -4.194490553860627  , -1.776724483504173  , -4.961414459401969  },
            {1.9401522387208834  , 3.779599730724497   , 4.91799314275255    , -0.33268116276867055, -4.504300630085851  , 3.304488779583693   , 1.9302032652294718  , -0.02887377895831733, -1.8696313683923615 },
            {-0.9858960842677913 , 4.8957420361793265  , -2.795913505523455  , -2.582370813147045  , -2.4719269483344353 , -3.1569740756413136 , -3.0779085269177453 , -2.4876525585263853 , 3.972936102477796   }
        });
        vector<vector<double> > expected({
            {-1.2996010963221751 , 1.6934230694381105  , 3.9823319406867226  , -4.067363801711129  , -4.371949385999068  , -6.376239723448771  , -3.262930581989932  , 4.285901070289789   , -2.6066670334005027 },
            {1.8153013238412736  , -3.3740417874778803 , 2.1574351690015288  , -3.679092768813744  , -2.3799074083787612 , -4.047280589460134  , 0.775859537515319   , 2.428658126414245   , 2.7493339217288284  },
            {-3.3607982134301637 , -5.258241536309775  , -1.4546264479283133 , 2.706533401843629   , -1.28233043087255   , -3.21234848499015   , -1.3280073567352453 , 0.24087251060282622 , 4.0350657768279135  },
            {1.506616846786426   , -3.7052711402325085 , -0.09434965033611675, -0.9507840150435607 , -5.293267637725285  , -1.9898904545863374 , -2.366094641499783  , -2.783017391874333  , -4.385060896658894  },
            {1.222613721867571   , 7.764656194880972   , -7.7308514681279075 , 2.0917563647335626  , -2.592685496420172  , -2.107669723237108  , -8.170249371244886  , -2.1947911855316593 , -9.450344090670288  },
            {1.522085536693397   , 3.3615330286970106  , 4.499926440725064   , 4.2438324546181025  , -6.019487238975049  , 2.8864220775562064  , 5.899317591077712   , -0.44694048098580375, -2.287698070419848  },
            {-1.4039627862952777 , 4.47767533415184    , -3.2139802075509416 , -6.087761084076727  , -2.8899936503619217 , -4.03139843883768   , -3.4959752289452317 , -2.9057192605538718 , 3.5548694004503094  }
        });
        passed = areEqual(a + b, expected, 7, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix + SparseMatrix";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(3.2416017724486608, 8, 6);
        a[6][0] = 0.9805294011149099;
        a[6][2] = -0.5953702040994209;
        a[6][3] = -2.9354922064906463;
        a[6][1] = -1.6503874394624365;
        a[3][4] = -3.220888951012675;
        a[3][0] = 2.916111758536922;
        a[3][1] = 4.942298440696028;
        a[1][5] = 1.0798344594700975;
        a[1][3] = -0.5892108861936212;
        a[1][1] = -1.152431249103465;
        a[1][2] = -1.7452401989147601;
        a[7][4] = 2.4703681755306492;
        a[4][0] = -4.001696512275768;
        a[4][1] = 1.25090077713081;
        a[4][4] = 0.0403622926192595;
        a[2][3] = -4.653454312285723;
        a[2][2] = -3.619307434545278;
        a[0][0] = 4.932221615238465;
        a[5][5] = -4.669833926172176;
        SparseMatrix b(2.702638809556688, 8, 6);
        b[1][0] = 3.120453802041167;
        b[1][3] = 2.9309544477399676;
        b[1][4] = -4.088644747099041;
        b[1][1] = 1.0540883173375537;
        b[1][5] = 1.4417699486435334;
        b[2][2] = -2.836298628637918;
        b[2][5] = -4.337554711665721;
        b[3][0] = 3.653704804519929;
        b[3][4] = 4.479656722694248;
        b[5][2] = -4.35855442170734;
        b[5][4] = 3.4140278690181756;
        b[5][0] = 0.8208989741121133;
        b[6][2] = -2.973688736585819;
        b[6][3] = 0.759140644485349;
        b[6][0] = 0.9098201409374562;
        b[4][3] = 2.2858504297056115;
        b[4][1] = 1.456413565253154;
        b[7][4] = -2.2644287848472997;
        b[7][0] = -3.956249179441013;
        vector<vector<double> > expected({
            {7.634860424795153   , 5.9442405820053485  , 5.9442405820053485  , 5.9442405820053485  , 5.9442405820053485  , 5.9442405820053485  },
            {6.362055574489828   , -0.09834293176591125, 0.9573986106419277  , 2.3417435615463464  , -0.84704297465038   , 2.521604408113631   },
            {5.9442405820053485  , 5.9442405820053485  , -6.455606063183196  , -1.9508155027290348 , 5.9442405820053485  , -1.0959529392170602 },
            {6.569816563056851   , 7.644937250252716   , 5.9442405820053485  , 5.9442405820053485  , 1.258767771681573   , 5.9442405820053485  },
            {-1.2990577027190806 , 2.707314342383964   , 5.9442405820053485  , 5.527452202154272   , 2.7430011021759473  , 5.9442405820053485  },
            {4.062500746560774   , 5.9442405820053485  , -1.1169526492586792 , 5.9442405820053485  , 6.655629641466836   , -1.9671951166154882 },
            {1.8903495420523662  , 1.0522513700942513  , -3.56905894068524   , -2.1763515620052973 , 5.9442405820053485  , 5.9442405820053485  },
            {-0.7146474069923521 , 5.9442405820053485  , 5.9442405820053485  , 5.9442405820053485  , 0.20593939068334954 , 5.9442405820053485  }
        });
        passed = areEqual(a + b, expected, 8, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector + Vector";
        cout << "TEST: " << testName << endl;
        Vector a({-2.741754071184541 , 3.4667295047170548 , 1.1528123255121105 , -2.0237554421394224, -2.9439230418471327, -3.0826039832033403});
        Vector b({1.4438022088118174 , -3.6781227832622534, -3.0106008537083495, 2.012373582447556  , 1.7202218078809297 , -1.198098257096507 });
        vector<double> expected({-1.2979518623727238  , -0.21139327854519863 , -1.857788528196239   , -0.011381859691866225, -1.223701233966203   , -4.280702240299847   });
        passed = areEqual(a + b, expected, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector + SparseVector";
        cout << "TEST: " << testName << endl;
        Vector a({1.7724413715394753, 2.5999344784208827, 2.664133797742826 , -4.502289449758816, -4.951156218465358});
        SparseVector b(-3.97794610455891, 5);
        b[4] = -2.535735610790164;
        b[0] = -0.044093051680413886;
        vector<double> expected({1.7283483198590615 , -1.3780116261380275, -1.313812306816084 , -8.480235554317726 , -7.486891829255522 });
        passed = areEqual(a + b, expected, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector + Vector";
        cout << "TEST: " << testName << endl;
        SparseVector a(-1.647637592032456, 7);
        a[6] = -2.3505013594360005;
        a[1] = -1.5038683218514217;
        Vector b({-1.0116965638387487 , 3.532336498086842   , -0.05967037569528166, 1.0326512384582216  , 0.9034070739547566  , 3.28771675750221    , 3.625323513339344   });
        vector<double> expected({-2.6593341558712047, 2.02846817623542   , -1.7073079677277376, -0.6149863535742344, -0.7442305180776994, 1.640079165469754  , 1.2748221539033437 });
        passed = areEqual(a + b, expected, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector + SparseVector";
        cout << "TEST: " << testName << endl;
        SparseVector a(-2.8484986787353783, 5);
        a[4] = -4.929832717429851;
        a[3] = 4.983265961030119;
        SparseVector b(-2.2147312477435612, 5);
        b[4] = -3.33416258307527;
        b[3] = 1.319373445155561;
        vector<double> expected({-5.0632299264789395, -5.0632299264789395, -5.0632299264789395, 6.30263940618568   , -8.26399530050512  });
        passed = areEqual(a + b, expected, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix - Matrix";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {4.907145767059166   , -3.660114492541482  , 3.0748237055469883  , 4.428763199451373   , 0.26778301832021256 , 0.3461995223333556  , 1.4212229207594778  },
            {3.3547074345428562  , -3.5742298270039177 , 3.3986106750648144  , -0.13066155108304578, 1.9834997581322558  , -1.7055842108527743 , -0.5455608475663256 },
            {1.6887418173918745  , 3.1438468096745904  , 4.991532687937122   , 0.021587853733442408, 3.430851585058644   , -2.8958662600331966 , -0.29547102603569897},
            {-0.3957517821050729 , -3.969416613477282  , 2.1915787742823243  , 4.962320341623293   , -2.057121230197929  , 3.3692973617586155  , 0.19016811066889883 },
            {-0.7062993777137674 , 0.5198568850360274  , 3.8234585981809985  , 2.65213853787468    , 4.34294229471042    , 1.8022541158115857  , 3.4634267960143994  },
            {-2.0704425929294556 , 2.475219485157413   , -2.446970625150362  , 0.6948260029091688  , -1.882263033066729  , 3.8513719777756847  , -3.8299388792466296 },
            {3.6436164769457555  , 0.6376927371596208  , 1.9914364499307862  , 1.2576593235732858  , 0.0572795476408805  , 1.236050063798122   , 4.40677037077845    }
        });
        Matrix b({
            {-4.547147251444919  , 0.3651392116383043  , -0.9564709895872427 , 2.2760945939981028  , 0.2231415984506926  , -4.972029419831258  , 1.3100950768924289  },
            {-3.7367815328564435 , -0.572908030043533  , 3.828900522894866   , 1.8904846549286294  , -0.23879264331354477, 0.9241064043763974  , 2.8149650234995507  },
            {-0.4179069821329664 , -3.6858950423763304 , 0.3124661253479477  , -3.50586504457811   , 0.316921562492988   , -4.980814202127801  , -1.4969480441063663 },
            {-4.836300301867666  , 4.133696426898727   , -0.948855175807612  , 3.5442502292283855  , 1.0630372459419917  , 0.6917695834442661  , 4.409416783909318   },
            {0.12243401401948262 , -0.11809657890210268, 1.0548901546053902  , 4.7848028412859875  , 4.560587831485      , 3.4754045966634877  , -1.4239142021515585 },
            {-3.7724579481331877 , -2.186085890534637  , -1.6970971103288068 , -1.5466890463271232 , 2.4337785635635285  , -3.0769707481549133 , 2.506063859717603   },
            {-3.4732711582893003 , -0.46410884393378105, -2.2310405804673197 , 4.033147983189542   , -3.3674065764656644 , 3.004979149685724   , 0.2616368322446396  }
        });
        vector<vector<double> > expected({
            {9.454293018504085   , -4.025253704179786  , 4.031294695134231   , 2.15266860545327    , 0.04464141986951997 , 5.318228942164613   , 0.11112784386704888 },
            {7.0914889673993     , -3.0013217969603847 , -0.43028984783005164, -2.021146206011675  , 2.2222924014458005  , -2.6296906152291717 , -3.3605258710658763 },
            {2.106648799524841   , 6.829741852050921   , 4.679066562589174   , 3.5274528983115525  , 3.113930022565656   , 2.0849479420946047  , 1.2014770180706673  },
            {4.440548519762593   , -8.103113040376009  , 3.1404339500899363  , 1.4180701123949078  , -3.120158476139921  , 2.6775277783143494  , -4.219248673240419  },
            {-0.82873339173325   , 0.6379534639381301  , 2.7685684435756084  , -2.1326643034113077 , -0.21764553677457954, -1.673150480851902  , 4.887340998165958   },
            {1.702015355203732   , 4.66130537569205    , -0.7498735148215552 , 2.241515049236292   , -4.316041596630257  , 6.928342725930598   , -6.336002738964233  },
            {7.116887635235056   , 1.1018015810934019  , 4.222477030398106   , -2.775488659616256  , 3.424686124106545   , -1.768929085887602  , 4.14513353853381    }
        });
        passed = areEqual(a - b, expected, 7, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix - SparseMatrix";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {3.40792111112515    , -1.0792107195051859 , 4.223496848121108   , -0.39758015761534615, -4.5564748901103265 , -3.324588984645912  , -4.565133873904016  , -3.2410205412847803 , 3.3038614086511977  },
            {1.5320894618509016  , -4.162450833084038  , -1.0926461357137471 , 4.229678550642381   , -0.09382115973668448, 3.9572696626529495  , 4.8116906853959165  , 4.017375688380785   , 4.981614130971526   },
            {2.617577650485643   , -3.770526899987745  , -3.2447236006799662 , -0.6540940784402505 , 2.4067129306337325  , -3.3701333492258936 , 3.4480741778519786  , -0.605788619193957  , 1.7519983953130343  },
            {4.728946651593946   , -3.7841955100611466 , 4.499309312433873   , 1.2723400390859876  , -1.372437006541932  , -2.03988172870462   , 1.7286482126728426  , 4.923432308967087   , 2.3610290908608196  },
            {-2.0344120399142995 , 3.047001445187586   , 4.832367102388609   , 3.7339534607276548  , -3.012621517032809  , 4.880454467278367   , 3.0468870064426863  , -3.6264692031805867 , -3.2056470045623167 }
        });
        SparseMatrix b(2.7427992669207244, 5, 9);
        b[2][4] = -4.424688798521651;
        b[2][0] = 4.808228754277149;
        b[2][7] = 0.6253165956232714;
        b[1][4] = 0.3587626240280892;
        b[1][2] = -2.99229104970674;
        b[1][1] = 4.288431639417627;
        b[4][3] = -3.987147152716749;
        b[4][5] = -0.6404177189796822;
        b[4][8] = 1.2808595063354131;
        b[4][1] = 0.5329625232203385;
        b[0][5] = -4.454696973848641;
        b[0][4] = 2.6680725011059705;
        b[0][0] = -4.267015518188641;
        b[0][2] = -1.1122338630474116;
        b[0][7] = 0.347795422389817;
        b[3][3] = -1.4202235724749968;
        b[3][4] = 3.556399168568383;
        b[3][1] = -0.8539005193181257;
        vector<vector<double> > expected({
            {7.674936629313791  , -3.8220099864259103, 5.3357307111685195 , -3.1403794245360706, -7.224547391216297 , 1.1301079892027293 , -7.3079331408247405, -3.5888159636745973, 0.5610621417304733 },
            {-1.2107098050698228, -8.450882472501664 , 1.8996449139929927 , 1.486879283721657  , -0.4525837837647737, 1.2144703957322251 , 2.068891418475192  , 1.2745764214600603 , 2.238814864050801  },
            {-2.190651103791506 , -6.513326166908469 , -5.98752286760069  , -3.396893345360975 , 6.831401729155384  , -6.112932616146618 , 0.7052749109312542 , -1.2311052148172283, -0.9908008716076901},
            {1.9861473846732212 , -2.930294990743021 , 1.7565100455131484 , 2.6925636115609843 , -4.928836175110315 , -4.782680995625345 , -1.0141510542478818, 2.180633042046362  , -0.3817701760599048},
            {-4.777211306835024 , 2.5140389219672477 , 2.089567835467885  , 7.721100613444404  , -5.755420783953533 , 5.52087218625805   , 0.3040877395219619 , -6.369268470101311 , -4.48650651089773  }
        });
        passed = areEqual(a - b, expected, 5, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix - Matrix";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(-0.49684858403483556, 6, 8);
        a[0][3] = -4.134629653331267;
        a[0][2] = -2.672219927275772;
        a[0][0] = 0.35982409000810645;
        a[0][6] = 3.562331078789086;
        a[0][5] = 2.6165612733787746;
        a[0][4] = -3.437005469426566;
        a[0][1] = 4.686544902521826;
        a[5][6] = 0.3792996044232;
        a[5][1] = -4.535485224789638;
        a[5][7] = 2.9282079969572745;
        a[5][0] = -1.4329958552937185;
        a[5][2] = -1.933150460408367;
        a[2][1] = -4.420096855218477;
        a[2][6] = 3.835087827999594;
        a[3][0] = -4.369254066084891;
        a[3][3] = -0.3737710115065074;
        a[1][2] = -3.8177472992184045;
        a[4][6] = -4.6011984633015315;
        a[4][3] = -0.4666681296532351;
        Matrix b({
            {-4.947058131628817  , -1.0646877137173858 , 2.0252162512501926  , -1.1502984988316944 , 0.75160619102253    , -3.2338138250499004 , -0.1819571762605765 , 1.7282521301629377  },
            {4.3324211647201185  , -1.4995525810640653 , 3.2180153765152166  , 3.828196396177951   , 4.955980940537049   , -2.583527434514382  , -1.8398828454588045 , 3.380736873846036   },
            {4.414493135674103   , 4.814530738778199   , 3.2603683635992624  , 3.466908711102846   , 4.019858738968816   , -2.005825654108846  , 1.0691578904071015  , 0.3010520618558985  },
            {-4.080844383409337  , -4.3878668648779415 , -4.48984343942978   , -2.2382919527928244 , -0.9933995737608283 , 1.117300563989203   , -0.43279948268172586, -1.0135571041985925 },
            {4.630966419693467   , -1.423949050148222  , -1.5776959322371398 , -4.929228733018953  , 3.0877511985374078  , -1.079781967751944  , -4.896732906749276  , 2.6086731318535623  },
            {-2.9592087311539963 , 2.77717860215186    , 4.306489965813752   , 2.261039508089323   , 3.108272070749358   , 0.26707755274484857 , -1.5965923284246921 , -4.704677641151146  }
        });
        vector<vector<double> > expected({
            {5.306882221636924  , 5.751232616239212  , -4.697436178525964 , -2.9843311544995723, -4.188611660449096 , 5.850375098428675  , 3.7442882550496623 , -2.225100714197773 },
            {-4.829269748754954 , 1.0027039970292297 , -7.035762675733621 , -4.325044980212787 , -5.452829524571885 , 2.0866788504795464 , 1.343034261423969  , -3.8775854578808717},
            {-4.911341719708939 , -9.234627593996677 , -3.757216947634098 , -3.9637572951376816, -4.516707323003652 , 1.5089770700740104 , 2.7659299375924924 , -0.7979006458907341},
            {-0.288409682675554 , 3.891018280843106  , 3.9929948553949446 , 1.864520941286317  , 0.49655098972599276, -1.6141491480240386, -0.0640491013531097, 0.5167085201637569 },
            {-5.127815003728302 , 0.9271004661133864 , 1.0808473482023042 , 4.462560603365718  , -3.5845997825722433, 0.5829333837171085 , 0.29553444344774427, -3.105521715888398 },
            {1.5262128758602778 , -7.312663826941498 , -6.239640426222119 , -2.7578880921241584, -3.6051206547841934, -0.7639261367796841, 1.975891932847892  , 7.63288563810842   }
        });
        passed = areEqual(a - b, expected, 6, 8, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseMatrix - SparseMatrix";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(1.5999813986001037, 5, 8);
        a[0][4] = 2.1052470831538592;
        a[0][5] = -3.60846089251904;
        a[0][3] = -4.363640911358725;
        a[2][0] = 0.04819915243442363;
        a[2][4] = 1.4524882884250019;
        a[2][5] = 0.1893141805373766;
        a[2][2] = 0.30903523052408843;
        a[1][6] = -4.633971481981437;
        a[1][7] = 3.0354479434070534;
        a[3][6] = 4.67927449457903;
        a[3][5] = 4.8596455560530565;
        a[3][4] = 4.15567034379994;
        a[4][4] = 2.335087139875762;
        a[4][7] = 2.843921354319132;
        a[4][5] = -3.6038450536015434;
        a[4][0] = 2.0796954341016685;
        SparseMatrix b(-1.0532295000072711, 5, 8);
        b[2][1] = 2.695117248763541;
        b[2][2] = -2.8893959242076916;
        b[2][0] = 0.16963068404250325;
        b[0][6] = -1.5087252809572291;
        b[0][2] = -3.3663893497564334;
        b[0][7] = 1.8426226373573416;
        b[0][5] = -3.7616731484413215;
        b[3][0] = 2.440849108596187;
        b[3][6] = -4.888838801534274;
        b[3][3] = -4.500229005684565;
        b[4][7] = -0.3711461165396308;
        b[4][4] = 2.7595061387630313;
        b[4][2] = 2.4330682079874286;
        b[4][3] = 0.6421807039251073;
        b[1][1] = -1.0545331380036407;
        b[1][3] = 1.8277766561854634;
        vector<vector<double> > expected({
            {2.653210898607375   , 2.653210898607375   , 4.966370748356537   , -3.3104114113514536 , 3.1584765831611303  , 0.1532122559222815  , 3.108706679557333   , -0.24264123875723786},
            {2.653210898607375   , 2.6545145366037444  , 2.653210898607375   , -0.22779525758535968, 2.653210898607375   , 2.653210898607375   , -3.5807419819741657 , 4.0886774434143245  },
            {-0.12143153160807962, -1.0951358501634374 , 3.19843115473178    , 2.653210898607375   , 2.505717788432273   , 1.2425436805446477  , 2.653210898607375   , 2.653210898607375   },
            {-0.8408677099960835 , 2.653210898607375   , 2.653210898607375   , 6.1002104042846685  , 5.208899843807211   , 5.912875056060328   , 9.568113296113303   , 2.653210898607375   },
            {3.1329249341089396  , 2.653210898607375   , -0.8330868093873249 , 0.9578006946749964  , -0.4244189988872691 , -2.5506155535942723 , 2.653210898607375   , 3.215067470858763   }
        });
        passed = areEqual(a - b, expected, 5, 8, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector - Vector";
        cout << "TEST: " << testName << endl;
        Vector a({-0.0017246118343416939, 4.7371556640727555    , 0.640476901064595     , -1.6239702004634147   , 0.5843240169280541    , 3.7566374514236056    });
        Vector b({1.6972063158695025 , 2.8439374593979325 , -0.9202539528878635, 2.3519232070759246 , -2.3068673978560383, 4.243208107090595  });
        vector<double> expected({-1.6989309277038442 , 1.893218204674823   , 1.5607308539524585  , -3.9758934075393393 , 2.8911914147840925  , -0.48657065566698954});
        passed = areEqual(a - b, expected, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Vector - SparseVector";
        cout << "TEST: " << testName << endl;
        Vector a({-4.8238132303915275, 2.1463456036823994 , 3.1412703381549907 , 0.4405309051608777 , -2.6295145495440044});
        SparseVector b(3.08301964984552, 5);
        b[4] = -0.881914840531552;
        b[2] = 3.9534019265726528;
        vector<double> expected({-7.906832880237047 , -0.9366740461631204, -0.8121315884176621, -2.642488744684642 , -1.7475997090124524});
        passed = areEqual(a - b, expected, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector - Vector";
        cout << "TEST: " << testName << endl;
        SparseVector a(-3.338695778574067, 9);
        a[7] = -3.6909691341372994;
        a[6] = 2.954500895864741;
        a[8] = -2.229802422223849;
        Vector b({-3.3420417590569382 , -0.9019815923616736 , -0.9811490135425016 , 4.321376558573526   , -0.9401879333938119 , -1.7161070359412491 , -0.15338741126714694, -4.4545353387384745 , -0.6435444875258014 });
        vector<double> expected({0.003345980482871269, -2.4367141862123933 , -2.3575467650315654 , -7.660072337147593  , -2.398507845180255  , -1.6225887426328178 , 3.107888307131888   , 0.7635662046011751  , -1.5862579346980477 });
        passed = areEqual(a - b, expected, 9, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "SparseVector - SparseVector";
        cout << "TEST: " << testName << endl;
        SparseVector a(-3.225293188674226, 7);
        a[4] = -4.60407837305077;
        a[0] = 3.338844015518603;
        SparseVector b(4.087317726410507, 7);
        b[6] = -4.402555856906138;
        b[2] = 0.8945359656036853;
        vector<double> expected({-0.7484737108919042, -7.312610915084734 , -4.1198291542779115, -7.312610915084734 , -8.691396099461278 , -7.312610915084734 , 1.1772626682319114 });
        passed = areEqual(a - b, expected, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
        cout << "    passed: " << passed << endl;
    }
    {
        testName = "Matrix + constant";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {-4.45331337189626  , -0.7483559488764735, -0.4284427654537337, 1.5335281605141944 , -4.6600397145862384},
            {1.0703136256479793 , 2.1457228553005177 , 3.010003322069153  , -2.9204047854144144, -0.6385453303076716},
            {-2.7133341154951376, -4.155393583671771 , -2.6153430352674425, -1.2531250952977366, 0.11781388375811552},
            {-4.72298363358533  , -4.596371263959076 , 2.221084969018899  , -4.1751164792098105, -1.35491566543956  },
            {-2.194770604520474 , -3.612697763992659 , 2.6149915140802706 , -4.227940626957356 , -1.5453775479153933}
        });
        double c = -0.11070637616014256;
        vector<vector<double> > expected({
            {-4.564019748056403  , -0.8590623250366161 , -0.5391491416138763 , 1.4228217843540518  , -4.770746090746381  },
            {0.9596072494878367  , 2.035016479140375   , 2.8992969459090103  , -3.031111161574557  , -0.7492517064678141 },
            {-2.82404049165528   , -4.266099959831913  , -2.726049411427585  , -1.3638314714578792 , 0.007107507597972962},
            {-4.833690009745473  , -4.707077640119219  , 2.1103785928587566  , -4.285822855369953  , -1.4656220415997026 },
            {-2.3054769806806164 , -3.7234041401528017 , 2.504285137920128   , -4.338647003117498  , -1.6560839240755358 }
        });
        passed = areEqual(a + c, expected, 5, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "SparseMatrix + constant";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(-3.303374723677118, 5, 7);
        a[2][5] = -1.9550730186199408;
        a[2][6] = 0.023304504727331476;
        a[2][2] = -1.9182580402523177;
        a[2][3] = -1.1497184079201448;
        a[4][4] = 2.228121049654801;
        a[3][5] = 1.054771257772372;
        a[3][6] = 4.35930209344207;
        a[3][0] = -0.12706162151030398;
        a[3][2] = 2.785655834025511;
        a[1][4] = -3.7433619678740926;
        a[1][3] = -0.9610092147619467;
        a[0][3] = 1.088379853545053;
        a[0][4] = -2.636731686884801;
        a[0][1] = 0.3568139169553124;
        double c = 3.29340206578693;
        vector<vector<double> > expected({
            {-0.009972657890187975, 3.6502159827422425   , -0.009972657890187975, 4.381781919331983    , 0.6566703789021289   , -0.009972657890187975, -0.009972657890187975},
            {-0.009972657890187975, -0.009972657890187975, -0.009972657890187975, 2.3323928510249834   , -0.4499599020871625  , -0.009972657890187975, -0.009972657890187975},
            {-0.009972657890187975, -0.009972657890187975, 1.3751440255346123   , 2.1436836578667853   , -0.009972657890187975, 1.3383290471669893   , 3.3167065705142615   },
            {3.166340444276626    , -0.009972657890187975, 6.079057899812441    , -0.009972657890187975, -0.009972657890187975, 4.348173323559302    , 7.652704159229       },
            {-0.009972657890187975, -0.009972657890187975, -0.009972657890187975, -0.009972657890187975, 5.521523115441731    , -0.009972657890187975, -0.009972657890187975}
        });
        passed = areEqual(a + c, expected, 5, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "Vector + constant";
        cout << "TEST: " << testName << endl;
        Vector a({-1.825078095330789 , -0.62198856199781  , -2.871135336538466 , -2.1054215125840194, -2.8889241440726208});
        double c = 4.72504871514359;
        vector<double> expected({2.899970619812801 , 4.10306015314578  , 1.8539133786051236, 2.6196272025595704, 1.836124571070969 });
        passed = areEqual(a + c, expected, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "SparseVector + constant";
        cout << "TEST: " << testName << endl;
        SparseVector a(0.6607330458338367, 6);
        a[1] = -3.4891698473964636;
        a[5] = -2.659727476187631;
        double c = -1.210768993843744;
        vector<double> expected({-0.5500359480099073, -4.699938841240208 , -0.5500359480099073, -0.5500359480099073, -0.5500359480099073, -3.870496470031375 });
        passed = areEqual(a + c, expected, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "Matrix - constant";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {2.4329977074206246  , 1.1088578491554255  , -4.674916236627023  , 0.29359843383880246 , -1.5887016097790152 , 1.4337929125888564  },
            {3.5872004774154824  , 1.0934323850354115  , 2.979107317170982   , 1.9732200803220037  , -1.287117566397674  , 0.39648623741810596 },
            {1.404489205083955   , -1.8775568343309637 , 0.6133665837317306  , 0.46732731262576976 , -4.8252284817423305 , -1.8559604087603065 },
            {4.954015224455453   , -3.208789739857072  , 2.807505445414513   , -0.3559182107654655 , 3.2180474111473636  , 0.977397694208789   },
            {-1.93913457918487   , 3.6408035714907854  , -0.6622561035132959 , -1.5562552368193505 , -4.2491184455451645 , -0.3156866038896453 },
            {-3.1029685062484202 , -3.8756260907012017 , 4.630197256697658   , 3.4180568381636363  , -0.18886776445348552, -0.37965461684552704}
        });
        double c = 4.872602631300754;
        vector<vector<double> > expected({
            {-2.43960492388013   , -3.763744782145329  , -9.547518867927778  , -4.579004197461952  , -6.46130424107977   , -3.438809718711898  },
            {-1.285402153885272  , -3.779170246265343  , -1.8934953141297726 , -2.8993825509787507 , -6.159720197698428  , -4.4761163938826485 },
            {-3.4681134262167994 , -6.750159465631718  , -4.259236047569024  , -4.405275318674985  , -9.697831113043085  , -6.728563040061061  },
            {0.08141259315469895 , -8.081392371157825  , -2.0650971858862412 , -5.22852084206622   , -1.6545552201533908 , -3.8952049370919655 },
            {-6.811737210485624  , -1.231799059809969  , -5.53485873481405   , -6.4288578681201045 , -9.121721076845919  , -5.1882892351904    },
            {-7.975571137549174  , -8.748228722001956  , -0.24240537460309675, -1.4545457931371182 , -5.06147039575424   , -5.2522572481462815 }
        });
        passed = areEqual(a - c, expected, 6, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "SparseMatrix - constant";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(1.8177438676351603, 6, 6);
        a[4][4] = -3.9397300541621174;
        a[4][3] = -1.7432194665874299;
        a[3][2] = 0.04793092393776455;
        a[3][1] = 0.2567830608866366;
        a[3][3] = 4.822596704029145;
        a[3][4] = 0.6016873304509289;
        a[1][5] = -1.9438122391614074;
        a[1][4] = -2.8620134939375887;
        a[1][3] = -2.2305220003740622;
        a[2][1] = 1.6225727634164304;
        a[2][3] = 2.359153027758989;
        a[0][3] = -0.32116782633088814;
        a[0][1] = -0.04993909768158922;
        a[5][0] = -1.6217146436035201;
        double c = 2.6371431395288747;
        vector<vector<double> > expected({
            {-0.8193992718937144 , -2.687082237210464  , -0.8193992718937144 , -2.958310965859763  , -0.8193992718937144 , -0.8193992718937144 },
            {-0.8193992718937144 , -0.8193992718937144 , -0.8193992718937144 , -4.867665139902937  , -5.499156633466463  , -4.580955378690282  },
            {-0.8193992718937144 , -1.0145703761124443 , -0.8193992718937144 , -0.27799011176988575, -0.8193992718937144 , -0.8193992718937144 },
            {-0.8193992718937144 , -2.380360078642238  , -2.58921221559111   , 2.1854535645002704  , -2.0354558090779458 , -0.8193992718937144 },
            {-0.8193992718937144 , -0.8193992718937144 , -0.8193992718937144 , -4.380362606116305  , -6.576873193690992  , -0.8193992718937144 },
            {-4.258857783132395  , -0.8193992718937144 , -0.8193992718937144 , -0.8193992718937144 , -0.8193992718937144 , -0.8193992718937144 }
        });
        passed = areEqual(a - c, expected, 6, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "Vector - constant";
        cout << "TEST: " << testName << endl;
        Vector a({4.828107065462596  , 0.6112202008686136 , -1.6800042700649365, -1.2193451361391485, 3.7374283591217328 , 2.799607248823383  });
        double c = 2.0901069243758883;
        vector<double> expected({2.738000141086708  , -1.4788867235072747, -3.7701111944408248, -3.309452060515037 , 1.6473214347458445 , 0.7095003244474949 });
        passed = areEqual(a - c, expected, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "SparseVector - constant";
        cout << "TEST: " << testName << endl;
        SparseVector a(3.7092674728347745, 6);
        a[0] = -1.0489583998554366;
        a[4] = 1.3493633629285036;
        double c = 2.1724888698302527;
        vector<double> expected({-3.2214472696856893, 1.5367786030045218 , 1.5367786030045218 , 1.5367786030045218 , -0.8231255069017491, 1.5367786030045218 });
        passed = areEqual(a - c, expected, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "Matrix * constant";
        cout << "TEST: " << testName << endl;
        Matrix a({
            {-3.438869069264162  , 4.55629972404358    , 3.2446667854873645  , -2.494317723487165  , -1.8103649865298568 , 4.736214803198228   },
            {-1.600978891583864  , -2.9810295171440537 , -4.608707549970391  , -2.268687264734236  , 1.2372683091977699  , 2.2355557080125195  },
            {0.8936882736089755  , -0.47191338290349716, -1.2875047906346007 , -3.5713919976472797 , -1.9735773867592266 , 0.19969536978155755 },
            {1.2178791623129692  , 1.165228567206241   , -3.042898706986503  , 0.42892007273673016 , -2.012561325242863  , 3.527872380040286   },
            {-1.6212689967112457 , -4.282886471731128  , -3.6721125618929538 , -2.892345007848107  , -2.811813318380869  , 1.6188395946526368  },
            {0.9804694999905905  , -2.7103620020531682 , 2.8366877950487615  , -4.457248363400402  , 1.871360485253966   , 4.8899292608589935  }
        });
        double c = 4.443217889801307;
        vector<vector<double> > expected({
            {-15.279644569238894, 20.24463244516719  , 14.416761507721558 , -11.082797131846641, -8.043846095219362 , 21.044034343512145 },
            {-7.1134980522796925, -13.245363680600212, -20.47749183489079 , -10.080271841031552, 5.497452685911746  , 9.933061115488654  },
            {3.9708517252050455 , -2.096813985353473 , -5.720664318952544 , -15.86847281543962 , -8.76903435175591  , 0.8872900395239038 },
            {5.411302481605214  , 5.177364415518315  , -13.520261971735696, 1.9057853404787173 , -8.942248484641317 , 15.675105671930913 },
            {-7.203651410367623 , -19.02979779118375 , -16.31599622836688 , -12.851319082348212, -12.493499239011456, 7.192857047679293  },
            {4.356439622762735  , -12.042728935360325, 12.604021958741681 , -19.804525667548265, 8.314862386347677  , 21.727021171711563 }
        });
        passed = areEqual(a * c, expected, 6, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "SparseMatrix * constant";
        cout << "TEST: " << testName << endl;
        SparseMatrix a(-3.251149623829246, 7, 7);
        a[5][5] = 1.0885643336878577;
        a[5][6] = 2.0822384090607695;
        a[4][6] = -4.638249198397362;
        a[4][5] = 3.535592126342525;
        a[4][4] = 0.6746433179564999;
        a[4][3] = -4.87702492599732;
        a[0][0] = -2.0057459865488045;
        a[0][5] = 4.106973459006294;
        a[2][4] = 2.6865587371805937;
        a[2][0] = 1.797977552735265;
        a[6][4] = 1.9256720888034708;
        a[6][1] = -4.523486833052832;
        a[6][0] = -1.0114003859486753;
        a[6][6] = 4.997952911188447;
        a[3][5] = 2.7623208717400853;
        a[3][4] = 2.7361287734598507;
        a[3][6] = 4.987098845875046;
        a[3][3] = -4.269569828369467;
        a[1][4] = -0.47309944706493834;
        double c = 0.8603752536449143;
        vector<vector<double> > expected({
            {-1.7256942119241965 , -2.797208682239655  , -2.797208682239655  , -2.797208682239655  , -2.797208682239655  , 3.5335383315054716  , -2.797208682239655  },
            {-2.797208682239655  , -2.797208682239655  , -2.797208682239655  , -2.797208682239655  , -0.40704305676776503, -2.797208682239655  , -2.797208682239655  },
            {1.5469353929824659  , -2.797208682239655  , -2.797208682239655  , -2.797208682239655  , 2.311448654933714   , -2.797208682239655  , -2.797208682239655  },
            {-2.797208682239655  , -2.797208682239655  , -2.797208682239655  , -3.6734322240380535 , 2.3540974874706673  , 2.3766325206720165  , 4.2907764344720025  },
            {-2.797208682239655  , -2.797208682239655  , -2.797208682239655  , -4.196071557737514  , 0.5804464158066701  , 3.041935972486912   , -3.9906348305394506 },
            {-2.797208682239655  , -2.797208682239655  , -2.797208682239655  , -2.797208682239655  , -2.797208682239655  , 0.9365738147054976  , 1.7915063993448423  },
            {-0.8701838635971557 , -3.8918961313472606 , -2.797208682239655  , -2.797208682239655  , 1.6568006118412182  , -2.797208682239655  , 4.300115003669098   }
        });
        passed = areEqual(a * c, expected, 7, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "Vector * constant";
        cout << "TEST: " << testName << endl;
        Vector a({2.0295635764939304 , 4.829852444356229  , -0.8653890080820794, 2.0602333787600555 , 1.1523023359414095 , -0.2829966219478415, 1.8990334317425273 });
        double c = 1.1552789565979609;
        vector<double> expected({2.3447120910011336 , 5.579826892437975  , -0.999765710308409 , 2.3801442681622085 , 1.3312306403517846 , -0.3269400421246499, 2.1939133615681516 });
        passed = areEqual(a * c, expected, 7, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "SparseVector * constant";
        cout << "TEST: " << testName << endl;
        SparseVector a(-1.2326019751094353, 6);
        a[1] = -4.627817530667427;
        a[2] = -1.4747929810234384;
        double c = -3.2019010870929465;
        vector<double> expected({3.946669604055814, 14.81781398231183, 4.722141249175994, 3.946669604055814, 3.946669604055814, 3.946669604055814});
        passed = areEqual(a * c, expected, 6, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "Matrix inverse";cout << "TEST: " << testName << endl;
        Matrix a({
            {4.852663001266478  , 2.193499094872812  , 1.6087017771234127 , 3.9549178956391877 , -1.2806873051038803},
            {1.3212893996674415 , -2.7032829023895477, 0.10177308025372778, -2.8114362277809724, -2.636284180099552 },
            {3.864510940981532  , -0.7363333183641618, -3.7254969761359416, 4.9725549529839785 , -3.8763117811918226},
            {0.7051101886437809 , 4.035855983341094  , -1.1862262642632357, 1.3201586432181722 , 2.135383603887374  },
            {0.7645410396654579 , 1.0112433449393121 , 2.206302025586945  , 4.631971026139789  , 4.028205122268879  }
        });
        vector<vector<double> > expected({
            {-0.00971786507062363, 0.46080763018939047 , 0.027818339663863993, 0.2738959928189306  , 0.18006378588697233 },
            {0.15091672973343676 , -0.2373879674311333 , -0.07603374815624114, 0.04395323954588157 , -0.20384576233669965},
            {0.20566514682419354 , -0.17428529012745586, -0.14317569588308526, -0.23977040977095443, -0.05934768421674555},
            {0.035899348915672105, -0.24845340222282494, 0.07005501771316447 , -0.17546328747057768, 0.00923949579481144 },
            {-0.18996748744339934, 0.35328528797492426 , 0.011671792676117548, 0.2700693294800197  , 0.287128713773413   }
        });
        passed = areEqual(a.getInverse(), expected, 5, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
    {
        testName = "SparseMatrix inverse";cout << "TEST: " << testName << endl;
        SparseMatrix a(4.746300889806502, 5, 5);
        a[0][2] = -4.9398981391297125;
        a[0][3] = 4.584010340207538;
        a[4][2] = 3.463607087494795;
        a[4][4] = 1.2884200466520968;
        a[4][1] = 4.652749364584784;
        a[1][1] = -1.2124675326401402;
        a[1][3] = 3.4957918140902002;
        a[3][1] = -3.8406814901913533;
        a[3][0] = 2.8010492855958695;
        a[2][3] = -3.9933271095082654;
        vector<vector<double> > expected({
            {-0.02842716632310605 , 0.9936124653530654   , -0.19172806459817357 , -0.7390941168133901  , -0.12658736267921253 },
            {0.03385789098030581  , -0.46891481352844366 , 0.1261191218273597   , 0.268009954559714    , 0.15077060711441717  },
            {-0.07938437594016409 , -0.2121427958861916  , 0.07385849411369982  , 0.18883209593237174  , 0.1062286279372814   },
            {0.026939261304605815 , -0.23956820581621482 , -0.03317951843513155 , 0.21324394370338465  , 0.11996165929153392  },
            {0.09661915121130855  , -0.5141169214443843  , 0.17452506613146604  , 0.4616660649487484   , -0.029481451551650502}
        });
        passed = areEqual(a.getFullMatrix().getInverse(), expected, 5, 5, 1.0e-8);
        testParamsList.push_back(TestParams(testName, passed));
    }
}
